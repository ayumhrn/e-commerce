var cov_e1plenmc0=function(){var path="/home/ayumhrn/Glint-task/MP_2/e_commerce2/controllers/userController.js";var hash="729abf3d2ad9b99b2ef2478d9b621540c85cd1a4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/ayumhrn/Glint-task/MP_2/e_commerce2/controllers/userController.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:13},end:{line:2,column:38}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:4,column:17},end:{line:4,column:47}},"4":{start:{line:5,column:12},end:{line:5,column:35}},"5":{start:{line:6,column:30},end:{line:6,column:63}},"6":{start:{line:7,column:0},end:{line:7,column:27}},"7":{start:{line:10,column:0},end:{line:53,column:1}},"8":{start:{line:12,column:16},end:{line:12,column:45}},"9":{start:{line:19,column:8},end:{line:19,column:16}},"10":{start:{line:20,column:20},end:{line:20,column:22}},"11":{start:{line:22,column:20},end:{line:30,column:6}},"12":{start:{line:32,column:23},end:{line:34,column:6}},"13":{start:{line:36,column:4},end:{line:40,column:5}},"14":{start:{line:37,column:8},end:{line:39,column:9}},"15":{start:{line:42,column:4},end:{line:52,column:10}},"16":{start:{line:44,column:12},end:{line:46,column:13}},"17":{start:{line:49,column:12},end:{line:51,column:13}},"18":{start:{line:55,column:0},end:{line:65,column:1}},"19":{start:{line:57,column:4},end:{line:64,column:10}},"20":{start:{line:61,column:12},end:{line:63,column:13}},"21":{start:{line:67,column:0},end:{line:79,column:1}},"22":{start:{line:69,column:19},end:{line:69,column:34}},"23":{start:{line:71,column:4},end:{line:77,column:10}},"24":{start:{line:74,column:12},end:{line:76,column:13}},"25":{start:{line:81,column:0},end:{line:121,column:1}},"26":{start:{line:83,column:18},end:{line:85,column:6}},"27":{start:{line:87,column:4},end:{line:91,column:5}},"28":{start:{line:88,column:8},end:{line:90,column:9}},"29":{start:{line:93,column:4},end:{line:120,column:6}},"30":{start:{line:97,column:8},end:{line:119,column:10}},"31":{start:{line:99,column:12},end:{line:118,column:13}},"32":{start:{line:100,column:28},end:{line:102,column:18}},"33":{start:{line:104,column:16},end:{line:104,column:53}},"34":{start:{line:106,column:16},end:{line:110,column:18}},"35":{start:{line:114,column:16},end:{line:117,column:18}},"36":{start:{line:123,column:0},end:{line:143,column:1}},"37":{start:{line:125,column:19},end:{line:125,column:34}},"38":{start:{line:145,column:0},end:{line:157,column:1}},"39":{start:{line:147,column:19},end:{line:147,column:34}},"40":{start:{line:149,column:4},end:{line:155,column:10}},"41":{start:{line:152,column:12},end:{line:154,column:13}},"42":{start:{line:159,column:0},end:{line:162,column:1}},"43":{start:{line:160,column:16},end:{line:160,column:30}},"44":{start:{line:161,column:4},end:{line:161,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:19},end:{line:10,column:20}},loc:{start:{line:10,column:39},end:{line:53,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:43,column:14},end:{line:43,column:15}},loc:{start:{line:43,column:27},end:{line:47,column:9}},line:43},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:15},end:{line:48,column:16}},loc:{start:{line:48,column:24},end:{line:52,column:9}},line:48},"3":{name:"(anonymous_3)",decl:{start:{line:55,column:21},end:{line:55,column:22}},loc:{start:{line:55,column:35},end:{line:65,column:1}},line:55},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:14},end:{line:60,column:15}},loc:{start:{line:60,column:25},end:{line:64,column:9}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:67,column:22},end:{line:67,column:23}},loc:{start:{line:67,column:42},end:{line:79,column:1}},line:67},"6":{name:"(anonymous_6)",decl:{start:{line:73,column:14},end:{line:73,column:15}},loc:{start:{line:73,column:25},end:{line:77,column:9}},line:73},"7":{name:"(anonymous_7)",decl:{start:{line:81,column:16},end:{line:81,column:17}},loc:{start:{line:81,column:36},end:{line:121,column:1}},line:81},"8":{name:"(anonymous_8)",decl:{start:{line:95,column:12},end:{line:95,column:13}},loc:{start:{line:95,column:33},end:{line:120,column:5}},line:95},"9":{name:"(anonymous_9)",decl:{start:{line:97,column:62},end:{line:97,column:63}},loc:{start:{line:97,column:80},end:{line:119,column:9}},line:97},"10":{name:"(anonymous_10)",decl:{start:{line:123,column:25},end:{line:123,column:26}},loc:{start:{line:123,column:45},end:{line:143,column:1}},line:123},"11":{name:"(anonymous_11)",decl:{start:{line:145,column:25},end:{line:145,column:26}},loc:{start:{line:145,column:45},end:{line:157,column:1}},line:145},"12":{name:"(anonymous_12)",decl:{start:{line:151,column:14},end:{line:151,column:15}},loc:{start:{line:151,column:25},end:{line:155,column:9}},line:151},"13":{name:"(anonymous_13)",decl:{start:{line:159,column:24},end:{line:159,column:25}},loc:{start:{line:159,column:38},end:{line:162,column:1}},line:159}},branchMap:{"0":{loc:{start:{line:36,column:4},end:{line:40,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:40,column:5}},{start:{line:36,column:4},end:{line:40,column:5}}],line:36},"1":{loc:{start:{line:87,column:4},end:{line:91,column:5}},type:"if",locations:[{start:{line:87,column:4},end:{line:91,column:5}},{start:{line:87,column:4},end:{line:91,column:5}}],line:87},"2":{loc:{start:{line:99,column:12},end:{line:118,column:13}},type:"if",locations:[{start:{line:99,column:12},end:{line:118,column:13}},{start:{line:99,column:12},end:{line:118,column:13}}],line:99}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"729abf3d2ad9b99b2ef2478d9b621540c85cd1a4"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const mongoose=(cov_e1plenmc0.s[0]++,require('mongoose'));const user=(cov_e1plenmc0.s[1]++,require('../models/user'));const bcrypt=(cov_e1plenmc0.s[2]++,require('bcrypt'));const response=(cov_e1plenmc0.s[3]++,require('../helpers/response'));const jwt=(cov_e1plenmc0.s[4]++,require('jsonwebtoken'));const{sendResetPassword}=(cov_e1plenmc0.s[5]++,require('../services/nodemailer'));cov_e1plenmc0.s[6]++;require('dotenv').config();cov_e1plenmc0.s[7]++;exports.register=async(req,res)=>{cov_e1plenmc0.f[0]++;const _id=(cov_e1plenmc0.s[8]++,new mongoose.Types.ObjectId());const{username,name,email,password,role}=(cov_e1plenmc0.s[9]++,req.body);const history=(cov_e1plenmc0.s[10]++,[]);const newuser=(cov_e1plenmc0.s[11]++,new user({_id:_id,username:username,name:name,email:email,role:role,password:password,history}));const emailExist=(cov_e1plenmc0.s[12]++,await user.findOne({email:req.body.email}));cov_e1plenmc0.s[13]++;if(emailExist){cov_e1plenmc0.b[0][0]++;cov_e1plenmc0.s[14]++;return res.status(409).json(response.errorResponse('Already exist',409));}else{cov_e1plenmc0.b[0][1]++;}cov_e1plenmc0.s[15]++;newuser.save().then(newuser=>{cov_e1plenmc0.f[1]++;cov_e1plenmc0.s[16]++;return res.status(201).json(response.successResponse('User successfully created!',newuser));}).catch(err=>{cov_e1plenmc0.f[2]++;cov_e1plenmc0.s[17]++;return res.status(406).json(response.errorResponse('Failed',err.message,406));});};cov_e1plenmc0.s[18]++;exports.getAllUser=(req,res)=>{cov_e1plenmc0.f[3]++;cov_e1plenmc0.s[19]++;user.find().select('-__v').exec().then(users=>{cov_e1plenmc0.f[4]++;cov_e1plenmc0.s[20]++;return res.status(200).json(response.successResponse('List user',users));});};cov_e1plenmc0.s[21]++;exports.getUserbyId=async(req,res)=>{cov_e1plenmc0.f[5]++;const userId=(cov_e1plenmc0.s[22]++,req.decoded._id);cov_e1plenmc0.s[23]++;user.findOne({_id:userId}).select('-password -__v').then(users=>{cov_e1plenmc0.f[6]++;cov_e1plenmc0.s[24]++;return res.status(200).json(response.successResponse('User found',users));});};cov_e1plenmc0.s[25]++;exports.login=async(req,res)=>{cov_e1plenmc0.f[7]++;const exist=(cov_e1plenmc0.s[26]++,await user.findOne({username:req.body.username}));cov_e1plenmc0.s[27]++;if(!exist){cov_e1plenmc0.b[1][0]++;cov_e1plenmc0.s[28]++;return res.status(404).json(response.errorResponse('Not found',404));}else{cov_e1plenmc0.b[1][1]++;}cov_e1plenmc0.s[29]++;user.findOne({username:req.body.username}).exec(function(err,user){cov_e1plenmc0.f[8]++;cov_e1plenmc0.s[30]++;bcrypt.compare(req.body.password,user.password).then(function(result){cov_e1plenmc0.f[9]++;cov_e1plenmc0.s[31]++;if(result){cov_e1plenmc0.b[2][0]++;var token=(cov_e1plenmc0.s[32]++,jwt.sign(user.toJSON(),process.env.SECRET_KEY,{algorithm:'HS256'}));cov_e1plenmc0.s[33]++;res.setHeader('Authorization',token);cov_e1plenmc0.s[34]++;res.json({message:'Login success',token:token,success:true});}else{cov_e1plenmc0.b[2][1]++;cov_e1plenmc0.s[35]++;res.status(401).json({message:'Password incorrect',success:false});}});});};cov_e1plenmc0.s[36]++;exports.updateUserbyId=async(req,res)=>{cov_e1plenmc0.f[10]++;const userId=(cov_e1plenmc0.s[37]++,req.decoded._id);/*istanbul ignore next */user.updateOne({_id:userId},{$set:req.body},{new:true}).exec().then(users=>{return res.status(201).json(response.successResponse('User successfully updated!',users));}).catch(err=>{return res.status(406).json(response.errorResponse('Update failed',err.message,406));});};cov_e1plenmc0.s[38]++;exports.deleteUserbyId=async(req,res)=>{cov_e1plenmc0.f[11]++;const userId=(cov_e1plenmc0.s[39]++,req.decoded._id);cov_e1plenmc0.s[40]++;user.deleteOne({_id:userId}).exec().then(users=>{cov_e1plenmc0.f[12]++;cov_e1plenmc0.s[41]++;return res.status(200).json(response.successResponse('User sucessfully deleted!',users));});};cov_e1plenmc0.s[42]++;exports.resetPassword=(req,res)=>{cov_e1plenmc0.f[13]++;var email=(cov_e1plenmc0.s[43]++,req.body.email);cov_e1plenmc0.s[44]++;sendResetPassword(email,res);};/* istanbul ignore next */exports.changePassword=(req,res)=>{const token=req.params.token;const password=req.body.password;const decoded=jwt.verify(token,process.env.SECRET_KEY);if(!decoded){return res.status(404).json(response.errorResponse('The token is expired or invalid',err,404));}bcrypt.hash(password,10,(err,hash)=>{if(err)throw err;user.updateOne({_id:decoded._id},{$set:{password:hash}},{new:true}).exec().then(()=>{return res.status(200).json(response.successResponse('Password successfully updated!',200));});});};